version: "3.4"
services:
  #vpn:
    #container_name: vpn
    #image: bubuntux/nordvpn
    #network_mode: bridge        # Required
    #cap_add:
      #- NET_ADMIN               # Required
      #- SYS_MODULE              # Required for TECHNOLOGY=NordLynx
    #sysctls:
      #- net.ipv4.conf.all.rp_filter=2
    #devices:
      #- /dev/net/tun            # Required
    #environment:                # Review https://github.com/bubuntux/nordvpn#environment-variables
      #- USER=${NORDVPN_USER}     # Required
      #- PASS=${NORDVPN_PASS}         # Required
      #- CONNECT=P2P
      #- TECHNOLOGY=NordLynx
      #- NETWORK=192.168.4.0/24
    #ulimits:                    # Recommended for High bandwidth scenarios
      #memlock:
        #soft: -1
        #hard: -1
    #ports:
      #- 8112:8112 # port for deluge web UI to be reachable from local network
    #restart: unless-stopped

  vpn:
    image: misioslav/expressvpn:latest
    container_name: vpn
    restart: unless-stopped
    ports: # ports from which container that uses expressvpn connection will be available in local network
      - 8112:8112 # deluge
      - 9117:9117 # jackett
      - 8989:8989 # sonarr
      - 7878:7878 # radarr
      - 8787:8787 # readarr
      - 6767:6767 # bazarr
      - 5800:5800 # jdownloader-2
    environment:
      - WHITELIST_DNS=192.168.4.1,1.1.1.1,8.8.8.8  # Comma seperated list of dns servers you wish to use and whitelist via iptables
      - CODE=${EXPRESSVPN_CODE} # Activation Code from ExpressVPN https://www.expressvpn.com/support/troubleshooting/find-activation-code/
      - SERVER=smart # By default container will connect to smart location, list of available locations you can find below
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    stdin_open: true
    tty: true
    command: /bin/bash
    privileged: true

  deluge:
    container_name: deluge
    image: ghcr.io/linuxserver/deluge:latest
    restart: unless-stopped
    network_mode: service:vpn # run on the vpn network
    #network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${STORAGE}/downloads:/downloads # downloads folder
      - ${ROOT}/config/deluge:/config # config files
    depends_on:
      - vpn

  jackett:
    container_name: jackett
    image: ghcr.io/linuxserver/jackett:latest
    restart: unless-stopped
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${STORAGE}/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
      - ${ROOT}/config/jackett:/config # config files
    depends_on:
      - vpn

  sonarr:
    container_name: sonarr
    image: ghcr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/sonarr:/config # config files
      - ${STORAGE}/complete/tv:/tv # tv shows folder
      - ${STORAGE}/downloads:/downloads # download folder
    depends_on:
      - vpn

  radarr:
    container_name: radarr
    image: ghcr.io/linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/radarr:/config # config files
      - ${STORAGE}/complete/movies:/movies # movies folder
      - ${STORAGE}/downloads:/downloads # download folder
    depends_on:
      - vpn

  readarr:
    container_name: readarr
    image: ghcr.io/linuxserver/readarr:nightly
    restart: unless-stopped
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /path/to/data:/config
      - /path/to/books:/books #optional
      - /path/to/downloadclient-downloads:/downloads #optional
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/readarr:/config # config files
      - ${STORAGE}/complete/books:/books # books folder
      - ${STORAGE}/downloads:/downloads # download folder
    depends_on:
      - vpn

  bazarr:
    container_name: bazarr
    image: ghcr.io/linuxserver/bazarr
    restart: unless-stopped
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=022 #optional
    volumes:
      - ${ROOT}/config/bazarr:/config # config files
      - ${STORAGE}/complete/movies:/movies # movies folder
      - ${STORAGE}/complete/tv:/tv # tv shows folder
    depends_on:
      - vpn

  jdownloader-2:
    container_name: jdownloader-2
    image: jlesage/jdownloader-2
    restart: unless-stopped
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=022 #optional
    volumes:
      - ${ROOT}/config/jdownloader-2:/config
      - ${STORAGE}/downloads/complete:/output

  plex-server:
    container_name: plex-server
    image: plexinc/pms-docker:latest
    restart: unless-stopped
    environment:
      - TZ=${TZ} # timezone, defined in .env
    network_mode: host
    volumes:
      - ${ROOT}/config/plex/db:/config # plex database
      - ${ROOT}/config/plex/transcode:/transcode # temp transcoded files
      - ${STORAGE}/complete:/data # media library

  organizr:
    container_name: organizr
    image: organizr/organizr
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - UMASK_SET=022 #optional
    volumes:
      - ${ROOT}/config/organizr:/config # config files
    ports:
      - 80:80

  tautulli:
    image: ghcr.io/tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    volumes:
      - ${ROOT}/config/tautulli:/config # config files
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    ports:
      - 8181:8181

  plextraktsync:
    image: ghcr.io/taxel/plextraktsync
    command: sync
    container_name: plextraktsync
    restart: on-failure:2
    volumes:
      - ${ROOT}/config/plextraktsync:/app/config
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
